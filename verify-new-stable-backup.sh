#!/bin/bash

# New Stable Backup Verification Script
# This script verifies the integrity of the new stable backup

echo "üîç Verifying New Stable Backup Integrity..."
echo "==========================================="

BACKUP_DIR="new-stable-backup-20250813-230230"

if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå Error: Backup directory not found: $BACKUP_DIR"
    exit 1
fi

echo "‚úÖ Backup directory found: $BACKUP_DIR"

# Check critical directories
echo ""
echo "üìÅ Checking critical directories..."

CRITICAL_DIRS=("frontend" "backend" "docs" "scripts" "config")
for dir in "${CRITICAL_DIRS[@]}"; do
    if [ -d "$BACKUP_DIR/$dir" ]; then
        echo "‚úÖ $dir directory exists"
    else
        echo "‚ùå $dir directory missing"
    fi
done

# Check critical files
echo ""
echo "üìÑ Checking critical files..."

CRITICAL_FILES=(
    "frontend/package.json"
    "frontend/src/App.jsx"
    "backend/package.json"
    "backend/src/server.js"
    "backend/prisma/schema.prisma"
    "README.md"
    "render.yaml"
    "BACKUP_MANIFEST.md"
    "BACKUP_SUMMARY.md"
)

for file in "${CRITICAL_FILES[@]}"; do
    if [ -f "$BACKUP_DIR/$file" ]; then
        echo "‚úÖ $file exists"
    else
        echo "‚ùå $file missing"
    fi
done

# Check file counts
echo ""
echo "üìä Checking file counts..."

FRONTEND_FILES=$(find "$BACKUP_DIR/frontend" -type f | wc -l)
BACKEND_FILES=$(find "$BACKUP_DIR/backend" -type f | wc -l)
DOCS_FILES=$(find "$BACKUP_DIR/docs" -type f | wc -l)
TOTAL_FILES=$(find "$BACKUP_DIR" -type f | wc -l)

echo "Frontend files: $FRONTEND_FILES"
echo "Backend files: $BACKEND_FILES"
echo "Documentation files: $DOCS_FILES"
echo "Total files: $TOTAL_FILES"

# Check backup size
echo ""
echo "üíæ Checking backup size..."
BACKUP_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
echo "Backup size: $BACKUP_SIZE"

# Check compressed archive
echo ""
echo "üóúÔ∏è  Checking compressed archive..."
ARCHIVE_FILE="${BACKUP_DIR}.tar.gz"
if [ -f "$ARCHIVE_FILE" ]; then
    ARCHIVE_SIZE=$(ls -lh "$ARCHIVE_FILE" | awk '{print $5}')
    echo "‚úÖ Compressed archive exists: $ARCHIVE_SIZE"
else
    echo "‚ùå Compressed archive missing"
fi

# Check for new features
echo ""
echo "üÜï Checking for new features..."
if [ -f "$BACKUP_DIR/backend/src/routes/artists.js" ]; then
    if grep -q "studioName" "$BACKUP_DIR/backend/src/routes/artists.js"; then
        echo "‚úÖ Studio integration system found"
    else
        echo "‚ö†Ô∏è  Studio integration not detected"
    fi
    
    if grep -q "messages" "$BACKUP_DIR/backend/src/routes/artists.js"; then
        echo "‚úÖ Message system for artist cards found"
    else
        echo "‚ö†Ô∏è  Message system not detected"
    fi
else
    echo "‚ùå Artists route file not found"
fi

# Final verification
echo ""
echo "üéØ Final Verification Results..."
echo "================================"

if [ $FRONTEND_FILES -gt 1000 ] && [ $BACKEND_FILES -gt 40 ] && [ $TOTAL_FILES -gt 1000 ]; then
    echo "‚úÖ NEW STABLE BACKUP VERIFICATION PASSED"
    echo "‚úÖ All critical components present"
    echo "‚úÖ File counts are reasonable"
    echo "‚úÖ Backup is ready for production use"
    echo "‚úÖ New features are included"
else
    echo "‚ùå NEW STABLE BACKUP VERIFICATION FAILED"
    echo "‚ùå Some critical components may be missing"
    echo "‚ùå File counts are suspiciously low"
fi

echo ""
echo "üìã Backup Location: $(pwd)/$BACKUP_DIR"
echo "üóúÔ∏è  Archive Location: $(pwd)/$ARCHIVE_FILE"
echo "üìä Total Size: $BACKUP_SIZE"
echo "üìÑ Total Files: $TOTAL_FILES"
echo ""
echo "üöÄ New stable backup verification complete!"
